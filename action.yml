name: 'MeshMap-Snapshot'
description: 'Walks in application and takes a shot of your infrastructure using Meshery Extension MeshMap'
author: Layer5
inputs:
  designId:  # id of input
    description: 'Give the Design Id'
    required: false
    default: '{}'
  applicationId:
    description: "Give the application Id"
    required: false
  githubToken:
    description: "Github token"
    required: false
  providerToken:
    description: "Meshery Authentication Provider Token"
    required: true
  cypressRecordKey:
    description: "cypress record key"
    required: false
  prNumber:
    description: "The Pull request on which comment has to be made"
    required: false
    default: 0
outputs:
  mardownResult: # id of output
    description: 'The markdown result'
runs:
  using: "composite"
  steps:
    - run: echo ${{ inputs.designId }}
      shell: bash
    - run: echo ${{ inputs.applicationId }}
      shell: bash
    - name: ping playground
      id: ping-playground
      run: |
        echo "IS_PLAYGROUND_RUNNING=$(./playground-ping.sh)" >> "$GITHUB_OUTPUT"
      shell: bash
    - name: set active cluster URL as playground
      if: ${{ steps.ping-playground.outputs.IS_PLAYGROUND_RUNNING }}
      run: echo "MESHERY_URL=https://playground.meshery.io" >> $GITHUB_ENV
      shell: bash
    - name: set active cluster URL as localhost:9081
      if: ${{ !steps.ping-playground.outputs.IS_PLAYGROUND_RUNNING }}
      run: echo "MESHERY_URL=http://127.0.0.1:9081" >> $GITHUB_ENV
      shell: bash
    - name: Create k8s Kind Cluster
      if: ${{ !steps.ping-playground.outputs.IS_PLAYGROUND_RUNNING }}
      uses: helm/kind-action@v1.7.0
      with:
        cluster_name: "kind-cluster"
    - run: echo ${{ steps.ping-playground.outputs.IS_PLAYGROUND_RUNNING }}
      shell: bash
    - run: 
      working-directory: cypress-action/
      if: ${{ !steps.ping-playground.outputs.IS_PLAYGROUND_RUNNING }}
      shell: bash
    - name: Cypress run
      uses: cypress-io/github-action@v4
      with:
        working-directory: cypress-action
        spec: cypress/e2e/e2e/**/*
        browser: chrome 
        # record: true
      env:
        GITHUB_TOKEN: ${{ inputs.githubToken }}
        CYPRESS_token: ${{ inputs.providerToken }}
        CYPRESS_releasetag: ${{env.tag}}
        CYPRESS_applicationId: ${{ inputs.applicationId }}
        # CYPRESS_RECORD_KEY: ${{ inputs.cypressRecordKey }}
    - run: ls
      shell: bash
    - run: tree cypress-action/cypress/ -L 2me
      shell: bash
    - name: Upload Cypress artifacts
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: cypress-ss
        path: cypress-action/cypress/videos
    - name: Upload Cypress artifacts
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: cypress-ss
        path: cypress-action/cypress/screenshots
    - run:  echo "SCREENSHOT_NAME=$(ls)" >> $GITHUB_ENV # Assumption: There is only one screenshot in the download directory
      working-directory: cypress-action/cypress/downloads
      shell: bash
    - run: mv "$SCREENSHOT_NAME" screenshot.png
      working-directory: cypress-action/cypress/downloads
      shell: bash
    - run: |
        export request=$(curl --fail -d "$(base64 -i screenshot.png)" 'https://meshery.layer5.io/api/integration/github/meta/artifacts' \
          -H "Content-Type: multipart/form-data" \
          -H "Authorization: Bearer ${{ inputs.providerToken }}");
        # TODO: fail in case of not 2XX or 3XX
        echo "RESOURCE_URL=$request" >> $GITHUB_ENV
      id: cloud-response
      working-directory: cypress-action/cypress/downloads
      shell: bash
    - name: Get Organization and Repository
      if: always()
      run: |
        # Extract organization and repository names from GITHUB_REPOSITORY
        IFS='/' read -r -a repoArray <<< "$GITHUB_REPOSITORY"
        organization=${repoArray[0]}
        repository=${repoArray[1]}

        echo "ORGANIZATION=$organization" >> $GITHUB_ENV
        echo "REPOSITORY=$repository" >> $GITHUB_ENV
      shell: bash
    - run: echo $ORGANIZATION && echo $REPOSITORY && echo $PR_NUM
      shell: bash
    - name: Comment Success Status
      if: ${{ success() && inputs.prNumber != '0' }}
      uses: hasura/comment-progress@v2.3.0
      with:
        github-token: ${{ inputs.githubToken }}
        repository: "${{env.ORGANIZATION}}/${{env.REPOSITORY}}"
        number: ${{ inputs.prNumber }}
        id: meshmap-snapshot
        message: "![github-ss](${{env.RESOURCE_URL}})"
        append: false
